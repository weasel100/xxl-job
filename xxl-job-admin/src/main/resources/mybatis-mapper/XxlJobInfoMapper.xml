<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.admin.dao.XxlJobInfoDao">

    <resultMap id="XxlJobInfo" type="com.xxl.job.admin.core.model.XxlJobInfo">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="job_group" property="jobGroup" jdbcType="INTEGER"/>
        <result column="job_cron" property="jobCron" jdbcType="VARCHAR"/>
        <result column="job_desc" property="jobDesc" jdbcType="VARCHAR"/>
        <result column="add_time" property="addTime" jdbcType="DATE"/>
        <result column="update_time" property="updateTime" jdbcType="DATE"/>
        <result column="author" property="author" jdbcType="VARCHAR"/>
        <result column="alarm_email" property="alarmEmail" jdbcType="VARCHAR"/>
        <result column="executor_route_strategy" property="executorRouteStrategy" jdbcType="VARCHAR"/>
        <result column="executor_handler" property="executorHandler" jdbcType="VARCHAR"/>
        <result column="executor_param" property="executorParam" jdbcType="VARCHAR"/>
        <result column="executor_block_strategy" property="executorBlockStrategy" jdbcType="VARCHAR"/>
        <result column="executor_timeout" property="executorTimeout" jdbcType="INTEGER"/>
        <result column="executor_fail_retry_count" property="executorFailRetryCount" jdbcType="INTEGER"/>
        <result column="glue_type" property="glueType" jdbcType="VARCHAR"/>
        <result column="glue_source" property="glueSource" jdbcType="VARCHAR"/>
        <result column="glue_remark" property="glueRemark" jdbcType="VARCHAR"/>
        <result column="glue_updatetime" property="glueUpdatetime" jdbcType="DATE"/>
        <result column="child_jobid" property="childJobId" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
		t.id,
		t.job_group,
		t.job_cron,
		t.job_desc,
		t.add_time,
		t.update_time,
		t.author,
		t.alarm_email,
		t.executor_route_strategy,
		t.executor_handler,
		t.executor_param,
		t.executor_block_strategy,
		t.executor_timeout,
		t.executor_fail_retry_count,
		t.glue_type,
		t.glue_source,
		t.glue_remark,
		t.glue_updatetime,
		t.child_jobid
	</sql>

    <select id="pageList" parameterType="java.util.HashMap" resultMap="XxlJobInfo">
        select * from (SELECT
        <include refid="Base_Column_List"/>
        FROM JOB_QRTZ_TRIGGER_INFO t
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="jobGroup gt 0">
                AND t.job_group = #{jobGroup}
            </if>
            <if test="jobDesc !=null and jobDesc != ''">
                AND t.job_desc like '%'||#{jobDesc}||'%'
            </if>
            <if test="executorHandler !=null and executorHandler != ''">
                AND t.executor_handler like '%'||#{executorHandler}||'%'
            </if>
        </trim>
        )
        where rownum between #{offset} and #{pagesize}
        ORDER BY id DESC
    </select>

    <select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
        SELECT count(1)
        FROM JOB_QRTZ_TRIGGER_INFO t
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="jobGroup gt 0">
                AND t.job_group = #{jobGroup}
            </if>
            <if test="jobDesc !=null and jobDesc != ''">
                AND t.job_desc like '%'||#{jobDesc}||'%'
            </if>
            <if test="executorHandler !=null and executorHandler != ''">
                AND t.executor_handler like '%'||#{executorHandler}||'%'
            </if>
        </trim>
    </select>
	<select id="findMaxId" resultType="java.lang.Integer" useCache="false" flushCache="true" >
       select JOB_QRTZ_TRIGGER_INFO_ID.NEXTVAL netval FROM DUAL
    </select>
    <insert id="save" parameterType="com.xxl.job.admin.core.model.XxlJobInfo">
		INSERT INTO JOB_QRTZ_TRIGGER_INFO (
		    id,
			job_group,
			job_cron,
			job_desc,
			add_time,
			update_time,
			author,
			alarm_email,
            executor_route_strategy,
			executor_handler,
			executor_param,
			executor_block_strategy,
			executor_timeout,
			executor_fail_retry_count,
			glue_type,
			glue_source,
			glue_remark,
			glue_updatetime,
			child_jobid
		) VALUES (
		    #{id},
			#{jobGroup,jdbcType=NUMERIC},
			#{jobCron,jdbcType=VARCHAR},
			#{jobDesc,jdbcType=VARCHAR},
			sysdate,
		    sysdate,
			#{author,jdbcType=VARCHAR},
			#{alarmEmail,jdbcType=VARCHAR},
			#{executorRouteStrategy,jdbcType=VARCHAR},
			#{executorHandler,jdbcType=VARCHAR},
			#{executorParam,jdbcType=VARCHAR},
			#{executorBlockStrategy,jdbcType=VARCHAR},
			#{executorTimeout,jdbcType=NUMERIC},
			#{executorFailRetryCount,jdbcType=NUMERIC},
			#{glueType,jdbcType=VARCHAR},
			#{glueSource,jdbcType=VARCHAR},
			#{glueRemark,jdbcType=VARCHAR},
		    sysdate,
			#{childJobId,jdbcType=VARCHAR}
		)
	</insert>

    <select id="loadById" parameterType="java.util.HashMap" resultMap="XxlJobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM JOB_QRTZ_TRIGGER_INFO t
        WHERE t.id = #{id}
    </select>

    <update id="update" parameterType="com.xxl.job.admin.core.model.XxlJobInfo">
		UPDATE JOB_QRTZ_TRIGGER_INFO
		SET
			job_group = #{jobGroup,jdbcType=INTEGER},
			job_cron = #{jobCron},
			job_desc = #{jobDesc},
			update_time = sysdate,
			author = #{author},
			alarm_email = #{alarmEmail,jdbcType=VARCHAR},
			executor_route_strategy = #{executorRouteStrategy,jdbcType=VARCHAR},
			executor_handler = #{executorHandler,jdbcType=VARCHAR},
			executor_param = #{executorParam,jdbcType=VARCHAR},
			executor_block_strategy = #{executorBlockStrategy,jdbcType=VARCHAR},
			executor_timeout = ${executorTimeout},
			executor_fail_retry_count = ${executorFailRetryCount},
			glue_type = #{glueType,jdbcType=VARCHAR},
			glue_source = #{glueSource,jdbcType=VARCHAR},
			glue_remark = #{glueRemark,jdbcType=VARCHAR},
			glue_updatetime = #{glueUpdatetime},
			child_jobid = #{childJobId,jdbcType=VARCHAR}
		WHERE id = #{id,jdbcType=NUMERIC}
	</update>

    <delete id="delete" parameterType="java.util.HashMap">
		DELETE
		FROM JOB_QRTZ_TRIGGER_INFO
		WHERE id = #{id}
	</delete>

    <select id="getJobsByGroup" parameterType="java.util.HashMap" resultMap="XxlJobInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM JOB_QRTZ_TRIGGER_INFO t
        WHERE t.job_group = #{jobGroup}
    </select>

    <select id="findAllCount" resultType="int">
		SELECT count(1)
		FROM JOB_QRTZ_TRIGGER_INFO
	</select>

</mapper>